@model IEnumerable<Candidaturas_BO.Models.EstatisticaCursoDisplay>

@{
    ViewBag.Title = "Estatistica por Dia";

}

<h2>Estatística por Dia</h2>


@using (Html.BeginForm())
{
    <div class="FilterDiv">
        Procurar por dia: @Html.TextBox("date", null, new { @class = "form-control", type = "date", @style = "width: 100%; margin-right:5px", @value = "" })
        <input type="submit" value="Procurar" class="btn btn-default" />
    </div>
}

<div class="TotalDiv">
    Total de Candidatos: @ViewBag.TotalCandidatos
</div>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Data", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            Total
        </th>
        <th>
            @Html.ActionLink("Percentagem", "Index", new { sortOrder = ViewBag.PercSortParm })
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Percentagem)
            </td>
        </tr>
    }

</table>
<div class="form-actions no-color">
    @Html.ActionLink("Voltar", "Index", "Estatisticas")
</div>
@if (@ViewBag.TotalCandidatos > 0)
{
    <div style="height:370px; width:100%; text-align:center ">
        <h4>Número de candidados por Dia</h4>
        <canvas id="chartTot"></canvas>
        <h4>Distribuição de candidatos por Dia</h4>
        <canvas id="chartPie"></canvas>
    </div>



}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">
    var colors = [];

    function getColors() {
        var dias =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Nome).ToArray()));
        for(var i = 0; i < dias.length; i++) {
            colors.push(getRandomColor());
        }
        console.log("COLOR")
        console.log(colors)
    }

    function getRandomColor() {
        var letters = '0123456789ABCDEF'.split('');
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }



    $(function () {
        getColors();
    var chartNameTot = "chartTot";
        var ctxTot = document.getElementById(chartNameTot).getContext('2d');
        var dataTot = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Nome).ToList())),
                datasets: [{
                    backgroundColor: colors,
                    borderColor: colors,
                    borderWidth: 1,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Total).ToList())),
    }]
            };

            var optionsTot = {
                responsive:true,
                maintainAspectRatio: false,
                legend: {
                    display: false
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true,
                            stepSize: 1
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

       var myChartTot = new  Chart(ctxTot, {
                options: optionsTot,
                data: dataTot,
                type:'horizontalBar'

            });

        var chartNamePer = "chartPie";
        var ctxPer = document.getElementById(chartNamePer).getContext('2d');
        var dataPer = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Nome).ToList())),
                datasets: [{
                    label: "Distribuição por género",
                    backgroundColor: colors,
                    borderColor: colors,
                    borderWidth: 1,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Percentagem).ToList())),
    }]
            };

            var optionsPer = {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                }
            };

       var myChartPer = new  Chart(ctxPer, {
                options: optionsPer,
                data: dataPer,
                type:'pie'

            });
        });
</script>  