@model PagedList.IPagedList<Candidaturas_BO.Models.User>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    /**/

    ViewBag.Title = "Users";
}

<h2>Lista de Users</h2>

@using (Html.BeginForm())
{
<div style="display: flex;margin-top: 20px;">

    Procurar por edição: &nbsp;
    @Html.DropDownList("edicao", ViewBag.Edicao as SelectList, "Escolha uma edição...", new { @class = "form-control" })
    Procurar users inscritos entre o seguinte intervalo: &nbsp;
    @Html.TextBox("startDate", null, new { @class = "form-control", type = "date", @style = "width: 12%", @value = "" })
    &nbsp; e &nbsp;
    @Html.TextBox("endDate", null, new { @class = "form-control", type = "date", @style = "width: 12%", @value = "" })
    &nbsp;
    Procurar user com email: &nbsp;
    @Html.TextBox("searchString", null, new { @class = "form-control", type = "text", @style = "width: 12%", @value = "" })
    &nbsp;
    <input type="submit" value="Procurar" class="btn btn-default" />
</div>
}

<div class="TotalDiv">
    Total de Users: @ViewBag.TotalCandidatos
</div>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.IDSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Data de Inscrição
        </th>
        <th>
            Edição
        </th>
        <th>

        </th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DataCriacao)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Edicao)
        </td>
        <td>
            @Html.ActionLink("Detalhes", "Details", new { id = item.ID })
        </td>
    </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))